{"version":3,"sources":["api.js","AuthComponents/InputWithLabel.js","AuthComponents/AuthButton.js","AuthComponents/RightAlignLink.js","components/Header.js","Routes/Login.js","Routes/Register.js","store.js","components/BtnContainer.js","components/Loading.js","ListComponents/Item.js","ListComponents/List.js","components/Board.js","Routes/Home.js","Routes/Write.js","CommentComponents/Comment.js","CommentComponents/CommentsList.js","Routes/View.js","Routes/Modify.js","Routes/ProfileModify.js","Routes/NotFound.js","Routes/test.js","Routes/AuthRoute.js","components/App.js","index.js"],"names":["api","axios","create","baseURL","Wrapper","styled","div","Label","label","Input","input","InputWithLabel","condition","rest","className","AuthButton","to","children","onClick","Aligner","RightAlignLink","Overlay","Container","props","isNavi","HeaderTitle","Navi","Menu","DesktopProfile","MobileProfile","Header","title","useState","isNaviOn","setIsNaviOn","onLogout","useHistory","localStorage","removeItem","window","location","reload","getItem","viewBox","xmlns","d","Title","InputWrap","Login","hash","email","setEmail","password","setPassword","onLogin","e","a","preventDefault","trimLeft","trimRight","alert","post","res","data","setItem","id","username","thumbnail","status","response","type","placeholder","value","onChange","target","ConfirmText","check","Register","setUsername","confirmPassword","setConfirmPassword","text","confirmed","useable","confirmEmail","setConfirmEmail","confirmUsername","setConfirmUsername","checkEmail","regExp","length","test","get","checkUsername","pattern","match","onRegister","console","log","maxLength","myBoard","createSlice","name","initialState","page","group","itemSize","collectionCnt","range","sInd","eInd","posts","reducers","setData","state","action","payload","setPage","setGroup","setItemSize","setCollectionCnt","setRange","actions","configureStore","reducer","MyBtn","button","current","PREV","NEXT","connect","dispatch","total_page","Math","ceil","total_group","useEffect","b","btnlist","prevBtn","Array","from","x","i","map","key","nextBtn","Loading","TdRow","Item","author","createdAt","lnk","comments_len","ThRow","TitleTh","UserTh","CreatedAtTh","_id","profile","comments","substr","WriteBtn","loading","htmlFor","handleItemSize","cnt","history","setLoading","getCollectionCount","count","fetchingData","TitleInput","ContentsInput","textarea","Write","setTitle","content","setContent","contentCnt","setContentCnt","handleWrite","trim","replace","required","style","resize","CommentWrap","CommentUser","CommentText","CommentDelBtn","Comment","commentId","handleDelete","CommentsArea","blank","CommentsList","commentData","postId","comment","setComment","handleComment","TitleArea","UserName","span","CreatedAt","Contents","View","params","setPost","confirm","delete","message","getPost","loggedIn","split","line","index","Modify","getData","handleModify","patch","BtnWrap","ProfileModify","changeUsername","setChangeUsername","currentPassword","setCurrentPassword","changePassword","setChangePassword","changePasswordConfirm","setChangePasswordConfirm","getProfile","blankChe","userId","href","NotFound","AuthRoute","isAuth","App","ServerCheck","exact","path","component","Home","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ce60e598.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const api = axios.create({\r\n    baseURL: \"https://my-reducer-board.herokuapp.com\"\r\n});","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    & + & {\r\n        margin-top:1rem;\r\n    }\r\n`;\r\n\r\nconst Label = styled.label``;\r\nconst Input = styled.input`\r\n    outline:none;\r\n    border-radius:0;\r\n    line-height:2.2rem;\r\n`;\r\n\r\nconst InputWithLabel = ({label, condition, ...rest}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Label className=\"text-lg text-gray-800 font-bold px-1 select-none\" >{label}</Label> <span className=\"text-sm\">{condition}</span>\r\n            <Input className=\"w-full border border-gray-500 px-2 py-1 mt-2\" {...rest}/>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default InputWithLabel;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Wrapper = styled.div`\r\n    cursor: pointer;\r\n    user-select:none;\r\n    transition: .1s all;\r\n\r\n    &:not(:last-child) {\r\n        border-right:2px solid #EBF4FF;\r\n    }\r\n`;\r\n\r\nconst AuthButton = ({to, children, onClick}) => {\r\n    return (\r\n        <Link to={to}>\r\n        <Wrapper className=\"py-2 mt-4 font-bold text-indigo-100 text-xl text-center bg-indigo-500 hover:bg-indigo-600\" onClick={onClick}>\r\n            {children}\r\n        </Wrapper>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default AuthButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Aligner = styled.div``;\r\n\r\nconst RightAlignLink = ({to, children}) => {\r\n    return (\r\n        <Aligner className=\"mt-2 text-right text-gray-700 underline\">\r\n            <Link to={to}>\r\n                {children}\r\n            </Link>\r\n        </Aligner>\r\n    );\r\n}\r\n\r\nexport default RightAlignLink;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Overlay = styled.div`\r\nposition:absolute;\r\ntop:0;\r\nleft:0;\r\nwidth:100%;\r\nheight:100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\nposition:relative;\r\nmargin-bottom:3.5rem;\r\n ${props => props.isNavi ? `\r\n    display:flex;\r\n    align-items:center;\r\n    @media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n        height:70px;\r\n    }\r\n ` : `\r\n    text-align:center;\r\n `}\r\n\r\n`;\r\n\r\nconst HeaderTitle = styled.div`\r\nfont-size:3rem;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:1.5rem;\r\n}\r\n`;\r\n\r\nconst Navi = styled.div`\r\nwidth:200px;\r\nposition:absolute;\r\ntop:15px;\r\nright:20px;\r\nz-index:1;\r\n`;\r\n\r\nconst Menu = styled.div`\r\nposition:absolute;\r\ntop:8px;\r\nright:12px;\r\nwidth:50px;\r\nheight:50px;\r\n`;\r\n\r\nconst DesktopProfile = styled.div`\r\nposition:absolute;\r\ntop:15px;\r\nright:20px;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    display:none;\r\n}\r\n`;\r\n\r\nconst MobileProfile = styled.div`\r\ndisplay:none;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    display:inherit;\r\n}\r\n`;\r\n\r\nconst Header = ({title = \"미정\", isNavi = false}) => {\r\n    const [isNaviOn, setIsNaviOn] = useState(false);\r\n\r\n    let history = useHistory();\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('id')\r\n        localStorage.removeItem('username')\r\n        localStorage.removeItem('thumbnail')\r\n        window.location.reload();\r\n    }\r\n    return (\r\n        <Container className=\"p-4 mb-10 bg-indigo-500 border-b-4 border-indigo-700 shadow-xl\" isNavi={isNavi}>\r\n          <HeaderTitle className=\"font-bold text-white\"><Link to=\"/\">{title}</Link></HeaderTitle>\r\n            {isNavi ? (<>\r\n                <DesktopProfile className=\"border-4 border-indigo-200 p-2 text-sm text-gray-800 text-right bg-white\" >\r\n                <div className=\"font-bold\">{localStorage.getItem('username')}</div>\r\n                <div className=\"grid grid-cols-2 gap-3\" >\r\n                    <Link to=\"/profile/modify\" className=\"bg-indigo-200 p-1\">정보수정</Link>\r\n                    <Link to=\"/\" className=\"bg-indigo-200 p-1\" onClick={onLogout}>로그아웃</Link>\r\n                </div>\r\n            </DesktopProfile>\r\n            <MobileProfile>\r\n            {isNaviOn ? (\r\n                <>\r\n                <Navi className=\"px-6 py-3 bg-white border-2 text-center\">\r\n                    <div className=\"text-right mb-1\"><span className=\"px-1 bg-gray-400 rounded cursor-pointer\" onClick={()=>{setIsNaviOn(!isNaviOn)}}>&times;</span></div>\r\n                    <h4 className=\"p-1 border\" >{localStorage.getItem('username')}</h4>\r\n                    <ul >\r\n                        <li className=\"p-1 bg-gray-200 border\" ><Link to=\"/profile/modify\">정보수정</Link></li>\r\n                        <li className=\"p-1 bg-gray-200 border\" onClick={onLogout}><Link to=\"/\" >로그아웃</Link></li>\r\n                    </ul>\r\n                </Navi>\r\n                <Overlay className=\"overlay\" onClick={()=>{setIsNaviOn(!isNaviOn)}}/>\r\n                </>\r\n                ) : (\r\n                <Menu className=\"bg-white border\" onClick={()=>{setIsNaviOn(!isNaviOn)}}>\r\n                    <svg className=\"m-2\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"/>\r\n                    </svg>\r\n                </Menu>)\r\n            }\r\n            </MobileProfile>\r\n            </>) : null}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { api } from '../api';\r\nimport styled from 'styled-components';\r\nimport InputWithLabel from '../AuthComponents/InputWithLabel';\r\nimport AuthButton from '../AuthComponents/AuthButton';\r\nimport RightAlignLink from '../AuthComponents/RightAlignLink';\r\nimport Header from '../components/Header';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\nwidth:400px;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:85vw;\r\n}\r\n`;\r\n\r\nconst Title = styled.div`\r\nfont-size:1.65rem;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:1.4rem;\r\n}\r\n`;\r\n\r\nconst InputWrap = styled.div``;\r\n\r\nconst Login = () => {\r\n\r\n    if(localStorage.getItem(\"username\") !== null) { \r\n        window.location.hash = \"#/\"\r\n        window.location.reload();\r\n    }\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onLogin = async(e) => {\r\n        e.preventDefault();\r\n        if(email.trimLeft().trimRight() === \"\" || password.trimLeft().trimRight() === \"\"){\r\n            window.alert(\"이메일 또는 비밀번호를 입력해주세요\")\r\n            return false;\r\n        }\r\n        try {\r\n            const {data:res} = await api.post('/api/users/login/local',{\r\n                email,\r\n                password\r\n            });\r\n\r\n            localStorage.setItem(\"id\",res.id);\r\n            localStorage.setItem(\"username\",res.username);\r\n            localStorage.setItem(\"thumbnail\",res.thumbnail);\r\n            window.location.reload();\r\n        } catch(e) {\r\n            const {status} = e.response;\r\n            switch (status) {\r\n                case 400:\r\n                    window.alert(\"이메일 형식이 잘못 되었습니다.\")\r\n                    return;\r\n                case 403:\r\n                    window.alert(\"이메일 혹은 비밀번호가 잘못 되었습니다.\")\r\n                    return;\r\n                default:\r\n                    throw e\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Container className=\"bg-indigo-100 mx-auto border-2 border-indigo-400 shadow-lg rounded-lg\">\r\n            <Title className=\"bg-indigo-400 text-center text-gray-900 font-bold py-2 select-none\">로그인</Title>\r\n            <InputWrap className=\"px-4 py-6\">\r\n                <InputWithLabel label={\"이메일\"} type=\"text\" placeholder=\"이메일을 입력해주세요\" value={email} onChange={e=>setEmail(e.target.value)}/>\r\n                <InputWithLabel label={\"비밀번호\"} type=\"password\" placeholder=\"비밀번호를 입력해주세요\" value={password} onChange={e=>setPassword(e.target.value)}/>\r\n                <AuthButton onClick={onLogin}>로그인</AuthButton>\r\n                <RightAlignLink to=\"/auth/register\">회원가입</RightAlignLink>\r\n            </InputWrap>\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { api } from '../api';\r\nimport InputWithLabel from '../AuthComponents/InputWithLabel';\r\nimport AuthButton from '../AuthComponents/AuthButton';\r\nimport RightAlignLink from '../AuthComponents/RightAlignLink';\r\nimport Header from '../components/Header';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth:450px;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:85vw;\r\n}\r\n`;\r\n\r\nconst Title = styled.div`\r\nfont-size:1.65rem;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:1.4rem;\r\n}\r\n`;\r\n\r\nconst InputWrap = styled.div``;\r\n\r\nconst ConfirmText = styled.div`\r\n    ${props => props.check ? \"color:green\":\"color:red\"}\r\n`;\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const [confirmEmail, setConfirmEmail] = useState({\r\n        text:\"\",\r\n        confirmed:\"\",\r\n        useable:false\r\n    });\r\n    const [confirmUsername, setConfirmUsername] = useState({\r\n        text:\"\",\r\n        confirmed:\"\",\r\n        useable:false\r\n    });\r\n\r\n    const checkEmail = async() => {\r\n        const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n        if(email.length < 1) {return false}\r\n        \r\n        if(!regExp.test(email)) {\r\n            setConfirmEmail({\r\n                ...confirmEmail,\r\n                text:\"잘못된 이메일 형식 입니다.\"\r\n            })   \r\n            return false;\r\n        }\r\n        try {\r\n            const res = await api.get(`/api/users/exists/email/${email}`)\r\n            if(res.data !== \"\") {\r\n                setConfirmEmail({\r\n                    ...confirmEmail,\r\n                    text:\"이미 사용 중 인 이메일입니다.\"\r\n                })\r\n            } else {\r\n                setConfirmEmail({\r\n                    confirmed:email,\r\n                    text:\"사용 가능 한 이메일 입니다.\",\r\n                    useable:true\r\n                })\r\n            }\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    const checkUsername = async() => {\r\n        const pattern = /\\s/g;\r\n        if(username.length < 4) {return false}\r\n        try {\r\n            if( username.match(pattern) ) {\r\n                window.alert('닉네임에 공백이 포함되어있습니다.')\r\n                return false;\r\n            }\r\n            const res = await api.get(`/api/users/exists/username/${username}`)\r\n            if(res.data !== \"\") {\r\n                setConfirmUsername({\r\n                    ...confirmUsername,\r\n                    text:\"이미 사용 중 인 닉네임 입니다.\"\r\n                })\r\n            } else {\r\n                setConfirmUsername({\r\n                    confirmed:username,\r\n                    text:\"사용 가능 한 닉네임 입니다.\",\r\n                    useable:true\r\n                })\r\n            }\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    const onRegister = async(e) => {\r\n        e.preventDefault();\r\n        const pattern = /\\s/g;\r\n        if (!confirmEmail.useable) {\r\n            window.alert(\"이메일 중복 확인이 필요합니다.\")\r\n            return false;\r\n        } if (!confirmUsername.useable) {\r\n            window.alert(\"닉네임 중복 확인이 필요합니다.\")\r\n            return false;\r\n        } if(email !== confirmEmail.confirmed) {\r\n            window.alert(\"중복확인된 이메일과 다릅니다.\")\r\n            setConfirmEmail({\r\n                confirmed:\"\",\r\n                text:\"중복확인을 다시 해 주세요.\",\r\n                useable:false\r\n            })\r\n            return false;\r\n        } if(username !== confirmUsername.confirmed) {\r\n            window.alert(\"중복확인된 닉네임과 다릅니다.\")\r\n            setConfirmUsername({\r\n                confirmed:\"\",\r\n                text:\"중복확인을 다시 해 주세요.\",\r\n                useable:false\r\n            })\r\n            return false;\r\n        } if(password.length < 1 || password.match(pattern)) {\r\n            window.alert(\"비밀번호가 공백이거나 공백이 포함되어있습니다.\")\r\n            return false;\r\n        } if(confirmPassword.trimLeft().trimRight() === \"\") {\r\n            window.alert(\"비밀번호가 확인되지 않았습니다.\")\r\n            return false;\r\n        } if(username.length < 4) {\r\n            window.alert(\"닉네임이 4자 보다 적습니다.\")\r\n            return false;\r\n        } if (password.length < 6) {\r\n            window.alert(\"비밀번호가 6자 보다 적습니다.\")\r\n            return false;\r\n        } if (password !== confirmPassword) {\r\n            window.alert(\"비밀번호와 확인 비밀번호와 일치하지않습니다.\")\r\n            return false;\r\n        } \r\n\r\n        console.log(`\r\n            email:${email}\r\n            username:${username}\r\n            password:${password}\r\n            confirmPassword:${confirmPassword}\r\n        `);\r\n\r\n        try {\r\n            console.log(\"회원가입\")\r\n            const {data:res} = await api.post('/api/users/register/local',{\r\n                username,\r\n                email,\r\n                password\r\n            });\r\n            localStorage.setItem(\"id\",res.id);\r\n            localStorage.setItem(\"username\",res.username);\r\n            localStorage.setItem(\"thumbnail\",res.thumbnail);\r\n            window.location.reload();\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <Container className=\"bg-indigo-100 mx-auto border-2 border-indigo-400 shadow-lg rounded-lg\">\r\n            <Title className=\"bg-indigo-400 text-center text-gray-900 font-bold py-2 select-none\">회원가입</Title>\r\n            <InputWrap className=\"px-4 py-6\">\r\n                <InputWithLabel label={\"이메일\"} type=\"text\" placeholder=\"이메일를 입력해주세요\" value={email} onChange={e=>setEmail(e.target.value)}/>\r\n                <div className=\"flex mb-4 mt-2\">\r\n                    <button className=\"p-1 mr-3 bg-indigo-300 hover:bg-indigo-400 text-sm rounded shadow\" onClick={checkEmail}>중복확인</button>\r\n                    <div className=\"my-auto\">{confirmEmail.text}</div>\r\n                </div>\r\n                <InputWithLabel label={\"닉네임\"} condition={\"( 공백없이 4자 이상 16자 이하로 입력해주세요 )\"} type=\"text\" placeholder=\"닉네임을 입력해주세요\" value={username} onChange={e=>setUsername(e.target.value)} maxLength=\"16\"/>\r\n                <div className=\"flex mb-4 mt-2\">\r\n                    <button className=\"p-1 mr-3 bg-indigo-300 hover:bg-indigo-400 text-sm rounded shadow\" onClick={checkUsername}>중복확인</button>\r\n                    <div className=\"my-auto\">{confirmUsername.text}</div>\r\n                </div>\r\n                <InputWithLabel label={\"비밀번호\"} condition={\"( 공백없이 6자 이상 16자 이하로 입력해주세요 )\"} type=\"password\" placeholder=\"비밀번호를 입력해주세요\" value={password} onChange={e=>setPassword(e.target.value)} maxLength=\"16\"/>\r\n                <InputWithLabel label={\"비밀번호 확인\"} type=\"password\" placeholder=\"비밀번호를 재입력해주세요\" value={confirmPassword} onChange={e=>setConfirmPassword(e.target.value)} maxLength=\"16\"/>\r\n                {confirmPassword !== \"\" ? (<ConfirmText className=\"px-2\" check={password === confirmPassword}>{password === confirmPassword ? \"비밀번호가 일치합니다.\" : \"비밀번호가 일치하지 않습니다.\" }</ConfirmText>) : null}\r\n                <AuthButton onClick={onRegister}>회원가입</AuthButton>\r\n                <RightAlignLink to=\"/auth/login\">로그인</RightAlignLink>\r\n            </InputWrap>\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst myBoard = createSlice({\r\n    name:\"myReducer\",\r\n    initialState:{\r\n        page:1,\r\n        group:1,\r\n        itemSize:10,\r\n        collectionCnt:0,\r\n        range:{sInd:1, eInd:5},\r\n        posts:[]\r\n    },\r\n    reducers:{\r\n        setData: (state, action) => {\r\n            return {\r\n                ...state,\r\n                posts:action.payload\r\n            }\r\n        },\r\n        setPage: (state, action) => {\r\n            return {\r\n                ...state,\r\n                page:action.payload\r\n            }\r\n        },\r\n        setGroup: (state, action) => {\r\n            return {\r\n                ...state,\r\n                group:action.payload\r\n            }\r\n        },\r\n        setItemSize: (state, action) => {\r\n            return {\r\n                ...state,\r\n                itemSize:action.payload\r\n            }\r\n        },\r\n        setCollectionCnt: (state, action) => {\r\n            return {\r\n                ...state,\r\n                collectionCnt:action.payload\r\n            }\r\n        },\r\n        setRange: (state, action) => {\r\n            return {\r\n                ...state,\r\n                range:action.payload\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    setData,\r\n    setPage,\r\n    setGroup,\r\n    setItemSize,\r\n    setCollectionCnt,\r\n    setRange\r\n} = myBoard.actions;\r\n\r\nexport default configureStore({reducer:myBoard.reducer});","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { setPage, setGroup } from '../store'\r\n\r\nconst MyBtn = styled.button`\r\n    ${props => props.current ? `\r\n    background-color:#2b6cb0;\r\n    ` : ``}\r\n`;\r\n\r\nconst PREV = styled.button`\r\n    ${props => props.current ? `\r\n        display:none;\r\n    ` : ``}\r\n`;\r\nconst NEXT = styled.button`\r\n    ${props => props.current ? `\r\n        display:none;\r\n    ` : ``}\r\n`;\r\n\r\nconst BtnContainer = ({state, setPage, setGroup}) => {\r\n    const { page, group, itemSize, collectionCnt } = state;\r\n\r\n    const btn_list_size = 5;\r\n\r\n    let total_page = Math.ceil(collectionCnt/itemSize);//page_item_size(페이지당 게시물 수) 씩 몇 페이지\r\n    let total_group = Math.ceil(total_page/btn_list_size);//btn_list_size(버튼 갯수) 씩 몇 그룹\r\n    let sInd = 1 + (group - 1) * btn_list_size;\r\n    let eInd = sInd + btn_list_size; //group*btn_list_size + 1\r\n\r\n    console.log(\"sInd: \",sInd, \"eInd: \",eInd)\r\n    console.log(\"total_page: \",total_page)\r\n    console.log(\"total_group: \",total_group)\r\n    console.log(\"---------------------------\")\r\n    console.log(\"---------------------------\")\r\n\r\n    useEffect(()=>{\r\n        sInd = 1 + (group - 1) * btn_list_size;\r\n        eInd = sInd + btn_list_size; //group*btn_list_size + 1\r\n    },[itemSize])\r\n\r\n    const range = ( a , b ) => Array.from( new Array( b > a ? b - a : a - b ), ( x, i ) => b > a ? i + a : a - i );\r\n    let btnlist = (<>\r\n        <PREV current={ group === 1 } className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 mr-1 rounded\" onClick={()=>prevBtn()}> ◀ </PREV>\r\n        {range(sInd, eInd).map(value => {\r\n            if(value > total_page) return null;\r\n            return (\r\n                <MyBtn key={value} current={page===value} onClick={()=>setPage(value)} className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-3 mr-1 rounded\">\r\n                    { value }\r\n                </MyBtn>\r\n            )\r\n        })}\r\n        <NEXT current={ total_page < btn_list_size || page === total_page } className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded\" onClick={()=>nextBtn()}> ▶ </NEXT>\r\n    </>);\r\n\r\n    const prevBtn = () => {\r\n        if(group - 1 < 1) {\r\n            return;\r\n        } else {\r\n            setPage( (group-1)*btn_list_size )\r\n            setGroup(group - 1);\r\n        }\r\n    }\r\n\r\n    const nextBtn = async() => {\r\n        if(group + 1 > total_group) {\r\n            return;\r\n        } else {\r\n            setPage(1 + (group) * btn_list_size)\r\n            setGroup(group + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            {btnlist}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPage: (page) => dispatch(setPage(page)),\r\n        setGroup: (group) => dispatch(setGroup(group))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BtnContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\nwidth:50vw;\r\nheight:45vh;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\nwidth:80vw;\r\nheight:50vh;\r\n}\r\n`;\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Container className=\"px-2 py-20 border-4 border-indigo-300 mx-auto mt-20 font-bold text-gray-700 rounded-lg shadow-lg flex items-center justify-center\">\r\n            <div>로딩중입니다.</div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TdRow = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns:auto 200px 100px;\r\nborder-bottom:1px solid;\r\nwhite-space:pre;\r\n& > div {\r\n    overflow:hidden;\r\n    & > :nth-child(1) {\r\n        overflow:hidden;\r\n        text-overflow:ellipsis;\r\n    }\r\n}\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    grid-template-columns:repeat(2,1fr);\r\n    border:1px solid;\r\n    font-size:0.7rem;\r\n    margin:2px;\r\n    & > div:nth-child(1) {/*제목*/\r\n        padding: 0 5px;\r\n        grid-column:span 2;\r\n        order:1;\r\n    }\r\n    & > div:nth-child(3) {/*작성일*/\r\n        justify-self:flex-end;\r\n        order:3;\r\n    }\r\n    & > div:nth-child(2) {/*작성자*/\r\n        justify-self:start;\r\n        order:2;\r\n    }\r\n}\r\n`;\r\n\r\nconst Item = ({title, author, createdAt, lnk, comments_len}) => {\r\n    return (\r\n        <TdRow>\r\n            <div className=\"flex\">\r\n                <div className=\"px-1 text-gray-800 font-bold\"><Link className=\"hover:underline hover:text-gray-600\" to={`/view/${lnk}`}>{title}</Link></div>\r\n                <div className=\"text-gray-600 font-bold ml-4\">{comments_len > 0 ? `[ ${comments_len} ]`:``}</div>\r\n            </div>\r\n            <div className=\"px-2 text-center\">{author}</div>\r\n            <div className=\"px-2 text-center\">{createdAt}</div>\r\n        </TdRow>\r\n    );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport Item from './Item';\r\n\r\nconst ThRow = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns:auto 200px 100px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    display:none;\r\n    font-size:0.7rem;\r\n}\r\n`;\r\n\r\nconst TitleTh = styled.div`\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n}\r\n`;\r\nconst UserTh = styled.div`\r\nwidth:200px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:52px;\r\n}\r\n`;\r\nconst CreatedAtTh = styled.div`\r\nwidth:100px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:85px;\r\n}\r\n`;\r\n\r\nconst List = ({state}) => {\r\n    const {posts} = state;\r\n\r\n    return (\r\n        <div className=\"mx-1 my-2\">\r\n            \r\n        {posts.length > 0 ? (\r\n            <>\r\n            <ThRow className=\"font-bold\">\r\n                <TitleTh className=\"bg-blue-200 px-2 py-1 border-gray-500 text-center\">제목</TitleTh>\r\n                <UserTh className=\"bg-blue-200 px-2 py-1 border-gray-500 text-center\">작성자</UserTh>\r\n                <CreatedAtTh className=\"bg-blue-200 px-2 py-1 border-gray-500 text-center\">작성일</CreatedAtTh>\r\n            </ThRow>\r\n            {posts.map(post => {\r\n                const { title, _id, author:{profile:{username}}, createdAt, comments} = post;\r\n                return (\r\n                    <Item\r\n                        key={_id}\r\n                        title={title}\r\n                        lnk={_id}\r\n                        author={username}\r\n                        createdAt={createdAt.substr(0,10)}\r\n                        comments_len={comments.length}\r\n                    />\r\n                )})\r\n            }\r\n         \r\n            </>\r\n            \r\n        ):(\r\n            <div className=\"bg-white rounded h-64 flex items-center justify-center font-bold text-gray-600\" >글이 없습니다.</div>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(List);","import React,{useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { setItemSize, setPage } from '../store'\r\nimport { connect } from 'react-redux';\r\n\r\nimport BtnContainer from './BtnContainer'\r\nimport styled from 'styled-components';\r\nimport Loading from '../components/Loading';\r\nimport List from '../ListComponents/List';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth:61vw;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:90vw;\r\n}\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:0.7rem;\r\n}\r\n`;\r\n\r\nconst Board = ({state, setItemSize, setPage, loading}) => {\r\n    \r\n    const { itemSize } = state;\r\n\r\n    const handleItemSize = (itemSize) => {\r\n        setPage(1);\r\n        setItemSize(itemSize);\r\n    }\r\n\r\n    useEffect(()=>{console.log(\"did mount\")},[])\r\n    useEffect(()=>()=>{console.log(\"did unmount\")},[])\r\n\r\n    return (\r\n        <>\r\n        {loading ? (\r\n            <Container className=\"bg-white border-2 border-gray-500 mx-auto p-2 my-6\">\r\n                <div className=\"px-1 flex justify-end\">\r\n                    <div className=\"flex px-2\">\r\n                        <label className=\"flex items-center text-bold mr-2\" htmlFor=\"items_size\">글 갯수</label>\r\n                        <select className=\"bg-gray-300 px-1 rounded\" id=\"items_size\" onChange={e=>handleItemSize(e.target.value)} value={itemSize}>\r\n                            <option className=\"bg-white\" value={10}>10개</option>\r\n                            <option className=\"bg-white\" value={15}>15개</option>\r\n                            <option className=\"bg-white\" value={20}>20개</option>\r\n                        </select>\r\n                    </div>\r\n                    <Link to=\"/write\">\r\n                        <WriteBtn className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow\"> 글쓰기 </WriteBtn>\r\n                    </Link>\r\n                </div>\r\n\r\n                <List />\r\n\r\n                <BtnContainer />\r\n\r\n                <div className=\"px-1 flex justify-end\">\r\n                    <Link to=\"/write\">\r\n                        <WriteBtn className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow\"> 글쓰기 </WriteBtn>\r\n                    </Link>\r\n                </div>\r\n            </Container>\r\n        ): (\r\n            <Loading/>\r\n        )}\r\n        \r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPage: (page) => dispatch(setPage(page)),\r\n        setItemSize: (itemSize) => dispatch(setItemSize(itemSize))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Board);","import React, { useState, useEffect } from 'react';\r\nimport { api } from '../api';\r\nimport Board from '../components/Board';\r\nimport Header from '../components/Header';\r\nimport { connect } from 'react-redux';\r\nimport { setCollectionCnt, setData } from '../store';\r\n\r\n\r\nconst Home = ({history, state, setCollectionCnt, setData}) => {\r\n    const {action} = history;\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    if(action === \"PUSH\") {window.location.reload()}\r\n\r\n    const { page, itemSize } = state;\r\n\r\n    const getCollectionCount = async() => {\r\n        try {\r\n            setLoading(false);\r\n            const {data:count} = await api.get(`/api/posts/count`);\r\n            setCollectionCnt(count);\r\n        } catch(e) {\r\n            console.log(e.response)\r\n            throw e;\r\n        }\r\n    }\r\n    const fetchingData = async() => {\r\n        try {\r\n            const {data:posts} = await api.get(`/api/posts?page=${page}&items_size=${itemSize}`);\r\n            setData(posts)\r\n            setLoading(true);\r\n        } catch(e) {\r\n            console.log(e.response)\r\n            throw e;\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getCollectionCount();\r\n        fetchingData();\r\n    },[page,itemSize])\r\n\r\n    return (\r\n        <>\r\n            <Header isNavi={true} />\r\n            <Board loading={loading}/>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { state };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCollectionCnt: (cnt) => dispatch(setCollectionCnt(cnt)),\r\n        setData: (data) => dispatch(setData(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { api } from '../api';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth:61vw;\r\nmin-height:600px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:90vw;\r\n    min-height:450px;\r\n}\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\nmin-height:30px;\r\nfont-size:1.6rem;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:20px;\r\n    font-size:1.2rem;\r\n}\r\n`;\r\n\r\nconst ContentsInput = styled.textarea`\r\nmin-height:500px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:350px;\r\n    font-size:0.8rem;\r\n}\r\n`;\r\nconst Write = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [contentCnt,setContentCnt] = useState(0);\r\n\r\n    let history = useHistory();\r\n\r\n    const titleChange = (text) => {\r\n        if(text.length > 50) {\r\n            window.alert(\"50자 제한입니다.\")\r\n            return\r\n        }\r\n        setTitle(text);\r\n    }\r\n\r\n    const contentChange = (text) => {\r\n        if(text.length > 1000) {\r\n            window.alert(\"1000자 제한입니다.\")\r\n            return\r\n        }\r\n        setContent(text);\r\n        setContentCnt(text.length);\r\n    }\r\n\r\n    const handleWrite = async(e) => {\r\n        e.preventDefault();\r\n        if(content.trim() === \"\" || title.trim() === \"\"){\r\n            window.alert(\"제목 또는 내용이 공백입니다.\")\r\n            return false;\r\n        }\r\n        try {\r\n            await api.post('/api/posts',{\r\n                title:title,\r\n                author:localStorage.getItem('id'),\r\n                text:content\r\n            })\r\n            \r\n            history.replace('/')\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Header/>\r\n        <Container className=\"bg-gray-100 border-2 border-gray-500 mx-auto p-2 my-6\">\r\n            <div className=\"bg-blue-300 p-2 flex\">제목</div>\r\n            <div className=\"border-b border-gray-500 pb-2\">\r\n                <TitleInput className=\"w-full p-2 border rounded\" value={title} onChange={e=>titleChange(e.target.value)} required maxLength=\"50\"/>\r\n            </div>\r\n            <div className=\"bg-blue-300 p-2 mt-2 flex\">내용</div>\r\n                <ContentsInput className=\"w-full p-2 border rounded\" value={content} onChange={e=>contentChange(e.target.value)} required maxLength=\"1000\" style={{resize:\"none\"}}/> \r\n            <div className=\"px-1 mb-2 flex justify-end\">글자수 {contentCnt}/1000</div>\r\n            <div className=\"px-1 flex justify-end\">\r\n                <Link to=\"/\" onClick={handleWrite}>\r\n                    <button className=\"py-2 px-4 mr-2 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded shadow\">확인</button>\r\n                </Link>\r\n                <Link to=\"/\">\r\n                    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow\">취소</button>\r\n                </Link>\r\n            </div>\r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Write;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CommentWrap = styled.div`\r\n    &:not(:last-child) {\r\n        margin-bottom:2px;\r\n    }\r\n    display:flex;\r\n    @media screen and (max-width: 768px) {\r\n        /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n        display:grid;\r\n        grid-template-columns: auto auto;\r\n        grid-column-gap:6px;\r\n    }\r\n`;\r\nconst CommentUser = styled.div`\r\nwidth:260px;\r\nmargin-right:1rem;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    display:block;\r\n    font-size:0.7rem;\r\n    order:1;\r\n}\r\n`;\r\n\r\nconst CommentText = styled.div`\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:0.65rem;\r\n    order:3;\r\n}\r\n`;\r\nconst CommentDelBtn = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    @media screen and (max-width: 768px) {\r\n        justify-self:end;\r\n        order:2;\r\n    }\r\n    & > button {\r\n        padding:0 .4rem;\r\n        @media screen and (max-width: 768px) {\r\n        /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n            font-size:0.7rem;\r\n            padding: 0.25rem 0.35rem 0 0.3rem\r\n        }\r\n    }\r\n`;\r\n\r\nconst Comment = ({commentId, author = \"임시 작성자\", text=\"임시 텍스트\", handleDelete}) => {\r\n    return (\r\n        <CommentWrap className=\"border-2 w-full rounded p-1 my-1\">\r\n            <CommentUser className=\"text-gray-700 text-left font-bold\">{author}</CommentUser>\r\n            <CommentText className=\"w-full\">{text}</CommentText>{/* 40자 */}\r\n            {\r\n                author === localStorage.getItem('username') ? (\r\n                    <CommentDelBtn>\r\n                        <button className=\"bg-gray-500 hover:bg-gray-800 text-white font-bold rounded shadow\" onClick={()=>handleDelete(commentId)}>&times;</button>\r\n                    </CommentDelBtn>\r\n                ) : null\r\n            }\r\n            \r\n        </CommentWrap>\r\n    );\r\n}\r\n\r\nexport default Comment;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { api } from '../api';\r\nimport Comment from './Comment';\r\n\r\n\r\nconst CommentsArea = styled.div`\r\n    min-height:145px;\r\n    ${props => props.blank ? `\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n    ` : \"\"}\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:155px;\r\n}\r\n`;\r\n\r\nconst CommentsList = ({commentData, postId}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const onCommentChange = (text) => {\r\n        if(text.length > 40) {\r\n            window.alert(\"40자 제한입니다.\")\r\n            return\r\n        }\r\n        setComment(text);\r\n    }\r\n\r\n    const handleComment = async(e) => {\r\n        if(comment.trimLeft().trimRight() === \"\"){\r\n            e.preventDefault();\r\n            window.alert(\"댓글이 공백입니다.\")\r\n            return false;\r\n        }\r\n        try {\r\n            console.log(\"입력된 댓글: \", comment);\r\n            await api.post('/api/posts/comments/create',{\r\n                postId:postId,\r\n                author:localStorage.getItem('id'),\r\n                text:comment\r\n            })\r\n            window.location.reload();\r\n        } catch(e) {\r\n\r\n        }\r\n    }\r\n\r\n    const handleDelete = async(commentId) => {\r\n        try {\r\n            await api.post('/api/posts/comments/delete',{\r\n                postId:postId,\r\n                commentId:commentId\r\n            })\r\n            window.location.reload();\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    let comments;\r\n    comments = commentData.map(data => {\r\n        const {_id:commentId, author:{profile:{username:author}}, text} = data;\r\n        return (\r\n            <Comment \r\n                key={commentId}\r\n                commentId={commentId}\r\n                author={author}\r\n                text={text}\r\n                handleDelete={handleDelete}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"px-1\">\r\n            <div className=\"flex mb-2\" >\r\n                <input className=\"w-full px-2 py-1 mr-2 border-2 rounded\" placeholder=\"댓글을 입력해주세요\" maxLength=\"40\" value={comment} onChange={e=>onCommentChange(e.target.value)}/>\r\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold w-16 rounded shadow\" onClick={handleComment} >입력</button>\r\n            </div>\r\n            {commentData.length > 0 ? (\r\n                <CommentsArea blank={false} className=\"bg-white text-gray-600 border-2 rounded px-1\" >\r\n                   {comments}\r\n                </CommentsArea>\r\n            ):(\r\n                <CommentsArea blank={true} className=\"bg-white text-gray-600 border-2 rounded px-1\" >\r\n                    댓글이 없습니다.\r\n                </CommentsArea>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default CommentsList;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { api } from '../api';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\nimport CommentsList from '../CommentComponents/CommentsList';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth:61vw;\r\nmin-height:800px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:90vw;\r\n    min-height:650px;\r\n}\r\n`;\r\n\r\nconst TitleArea = styled.div``;\r\n\r\nconst Title = styled.div`\r\nmin-height:30px;\r\nfont-size:1.6rem;\r\nwhite-space:pre-wrap;\r\nword-wrap:break-word;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:20px;\r\n    font-size:1rem;\r\n}\r\n`;\r\nconst UserName = styled.span`\r\n    font-size:.9rem;\r\n    font-weight:600;\r\n\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n    font-size:.9rem;\r\n    font-weight:600;\r\n`;\r\n\r\nconst Contents = styled.div`\r\nword-wrap:break-word;\r\nmin-height:500px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:350px;\r\n    font-size:0.8rem;\r\n}\r\n`;\r\n\r\nconst View = (props) => {\r\n    const {match:{params:{id}}} = props;\r\n    const [post, setPost] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    let history = useHistory();\r\n\r\n    const handleDelete = async(e) => {\r\n        e.preventDefault();\r\n        if( window.confirm(\"정말 삭제하시겠습니까?\") ) {\r\n            await api.delete(`/api/posts/${id}`)\r\n            history.replace(\"/\")\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const getPost = async() => {\r\n            setLoading(false);\r\n            try {\r\n                const {data:post} = await api.get(`/api/posts/${id}`);\r\n                setPost(post);\r\n                setLoading(true);\r\n            } catch(e) {\r\n                const {data:{message}} = e.response;\r\n                if(message === \"없는 게시물 입니다.\") {\r\n                    history.replace(\"/notfound\")\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        getPost();\r\n    },[id])\r\n\r\n    return (\r\n        <>\r\n        {\r\n            loading ? (\r\n            <>\r\n            <Header loggedIn={true} />\r\n            <Container className=\"bg-gray-100 border-2 border-gray-500 mx-auto p-2 my-6\">\r\n                <TitleArea className=\"border-b border-gray-500 px-2 mb-2\">\r\n                    <Title className=\"font-bold\">{post.title}</Title>{/* 50자 */}\r\n                    <UserName className=\"text-gray-700 pr-1 mr-1\">{post.author.profile.username}</UserName>\r\n                    <CreatedAt className=\"text-gray-700\">( {`${post.createdAt}`.substr(0,10)} )</CreatedAt>\r\n                </TitleArea>\r\n                <Contents className=\"bg-white p-2 mx-1 mb-3 border rounded\">{post.text.split('\\n').map((line,index) => (\r\n                    <span key={index}>{line}<br/></span>\r\n                ))}</Contents>\r\n\r\n                <CommentsList commentData={post.comments} postId={id} />\r\n\r\n                <div className=\"px-1 pt-3 flex justify-end\">\r\n                    <Link to=\"/\" onClick={()=>{console.log(\"목록으로\")}}>\r\n                        <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow mr-2\">목록</button>\r\n                    </Link>\r\n\r\n                    {post.author.profile.username === localStorage.getItem('username') ? (<>\r\n                    <Link to={`/modify/${id}`} onClick={()=>{console.log(\"수정으로\")}}>\r\n                        <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow mr-2\">수정</button>\r\n                    </Link>\r\n\r\n                    <Link to=\"/\" onClick={handleDelete}>\r\n                        <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow\">삭제</button>\r\n                    </Link>\r\n                    </>):null}\r\n                </div>\r\n            </Container>\r\n                </>\r\n            ) : (\r\n                <Loading/>\r\n            )\r\n        }\r\n        </>\r\n            \r\n    );\r\n}\r\n\r\nexport default View;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { api } from '../api';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header';\r\n\r\nconst Container = styled.div`\r\nwidth:61vw;\r\nmin-height:600px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:90vw;\r\n    min-height:450px;\r\n}\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\nmin-height:30px;\r\nfont-size:1.6rem;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:20px;\r\n    font-size:1.2rem;\r\n}\r\n`;\r\n\r\nconst ContentsInput = styled.textarea`\r\nmin-height:500px;\r\n@media screen and (max-width: 768px) {\r\n    /* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    min-height:350px;\r\n    font-size:0.8rem;\r\n}\r\n`;\r\n\r\nconst Modify = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [contentCnt,setContentCnt] = useState(0);\r\n\r\n    const {match:{params:{id}}} = props;\r\n\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        const {history:{action}} = props\r\n        console.log(action);\r\n    },[props])\r\n    \r\n    useEffect(()=>{\r\n        const getData = async() => {\r\n            const { data: post } = await api.get(`/api/posts/${id}`);\r\n            setTitle(post.title);\r\n            setContent(post.text);\r\n            setContentCnt(post.text.length)\r\n        }\r\n        getData();\r\n    },[id])\r\n\r\n    const handleModify = async(e) => {\r\n        e.preventDefault();\r\n        if(content.trim() === \"\" || title.trim() === \"\"){\r\n            window.alert(\"제목 또는 내용이 공백입니다.\")\r\n            return false;\r\n        }\r\n        try {\r\n            await api.patch(`/api/posts/${id}`,{\r\n                title:title,\r\n                author:localStorage.getItem('id'),\r\n                text:content\r\n            })   \r\n            history.replace(`/view/${id}`) \r\n        } catch (e) {\r\n            throw e\r\n        }\r\n    }\r\n\r\n    const titleChange = (text) => {\r\n        if(text.length > 50) {\r\n            window.alert(\"50자 제한입니다.\")\r\n            return\r\n        }\r\n        setTitle(text);\r\n    }\r\n\r\n    const contentChange = (text) => {\r\n        if(text.length > 1000) {\r\n            window.alert(\"1000자 제한입니다.\")\r\n            return\r\n        }\r\n        setContent(text);\r\n        setContentCnt(text.length);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Header/>\r\n        <Container className=\"bg-gray-100 border-2 border-gray-500 mx-auto p-2 my-6\">\r\n            <div className=\"bg-blue-300 p-2 flex\">제목</div>\r\n            <div className=\"border-b border-gray-500 pb-2\">\r\n                <TitleInput className=\"w-full p-2 border rounded\" value={title} onChange={e=>titleChange(e.target.value)} required maxLength=\"50\"/>\r\n            </div>\r\n            <div className=\"bg-blue-300 p-2 mt-2 flex\">내용</div>\r\n            <ContentsInput className=\"w-full p-2 border rounded\" value={content} onChange={e=>contentChange(e.target.value)} required maxLength=\"1000\" style={{resize:\"none\"}}/> \r\n            <div className=\"px-1 mb-2 flex justify-end\">글자수 {contentCnt}/1000</div>\r\n            <div className=\"px-1 flex justify-end\">\r\n                <Link to={`/view/${id}`} onClick={handleModify}>\r\n                    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 mr-2 rounded shadow\">확인</button>\r\n                </Link>\r\n                \r\n                <Link to={`/view/${id}`}>\r\n                    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded shadow\">취소</button>\r\n                </Link>\r\n            </div>\r\n            \r\n        </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modify;","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport { api } from '../api';\r\nimport InputWithLabel from '../AuthComponents/InputWithLabel';\r\nimport AuthButton from '../AuthComponents/AuthButton';\r\nimport Header from '../components/Header';\r\nimport Loading from '../components/Loading';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth:400px;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    width:85vw;\r\n}\r\n`;\r\n\r\nconst Title = styled.div`\r\nfont-size:1.65rem;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\n    font-size:1.4rem;\r\n}\r\n`;\r\n\r\nconst InputWrap = styled.div`\r\n`;\r\n\r\nconst ConfirmText = styled.div`\r\n    ${props => props.check ? \"color:green\":\"color:red\"}\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n    display:grid;\r\n    grid-template-columns: repeat(2,1fr);\r\n`;\r\n\r\nconst ProfileModify = () => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [changeUsername, setChangeUsername] = useState(\"\");\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [changePassword, setChangePassword] = useState(\"\");\r\n    const [changePasswordConfirm, setChangePasswordConfirm] = useState(\"\");\r\n\r\n    const getProfile = async() => {\r\n        try {\r\n            const { data:res } = await api.get(`/api/users/profile/${localStorage.getItem('id')}`);\r\n            const { profile:{username}, password } = res;\r\n            setUsername(username);\r\n            setPassword(password);\r\n            setLoading(true);\r\n        } catch(e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getProfile();\r\n    },[])\r\n\r\n    const handleModify = async(e) => {\r\n        e.preventDefault();\r\n        const blankChe = /\\s/g;\r\n        if(username === changeUsername) {\r\n            window.alert('기존의 닉네임과 동일합니다.')\r\n            return;\r\n        } if(changeUsername.match(blankChe)) {\r\n            window.alert('닉네임에 공백이 포함되어 있습니다.')\r\n            setChangeUsername('');\r\n            return;\r\n        } if(changePassword.match(blankChe)) {\r\n            window.alert('비밀번호에 공백이 포함되어 있습니다.')\r\n            setChangePassword('');\r\n            setChangePasswordConfirm('');\r\n            return;\r\n        }\r\n\r\n        console.log(`\r\n            현재 닉네임: ${username}\r\n            변경할 닉네임: ${changeUsername}\r\n            변경할 비밀번호: ${changePassword}\r\n            변경할 비밀번호 확인 : ${changePassword === changePasswordConfirm ? \"확인됨\" : \"다름\"}\r\n            비밀번호: ${password === currentPassword ? \"확인됨\" : \"다름\"}\r\n        `);\r\n\r\n        try {\r\n            const {data:res} = await api.post('/api/users/modify/profile',{\r\n                userId:localStorage.getItem('id'),\r\n                username:changeUsername,\r\n                password:changePassword\r\n            });\r\n\r\n            localStorage.setItem(\"username\",res.username);\r\n            window.location.hash = \"#/\"\r\n            window.location.href = \"https://mongbana.github.io/my_reducer_board/\"\r\n        } catch(e) {\r\n            console.log(e.response)\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    return  (<>\r\n        {loading ? (\r\n            <>\r\n        <Header />\r\n        <Container className=\"bg-indigo-100 mx-auto border-2 border-indigo-400 shadow-lg rounded-lg\">\r\n            <Title className=\"bg-indigo-400 text-center text-gray-900 font-bold py-2 select-none\">회원정보 수정</Title>\r\n            <InputWrap className=\"px-4 py-6\">\r\n                <InputWithLabel label={`닉네임 (현재 : ${username}) `} type=\"text\" placeholder=\"닉네임을 입력해주세요\" value={changeUsername} onChange={e=>setChangeUsername(e.target.value)}/>\r\n                <InputWithLabel label={\"현재 비밀번호\"} type=\"password\" placeholder=\"현재 비밀번호를 입력해주세요\" value={currentPassword} onChange={e=>setCurrentPassword(e.target.value)}/>\r\n                <InputWithLabel label={\"변경할 비밀번호\"} type=\"password\" placeholder=\"변경할 비밀번호를 입력해주세요\" value={changePassword} onChange={e=>setChangePassword(e.target.value)}/>\r\n                <InputWithLabel label={\"변경할 비밀번호 확인\"} type=\"password\" placeholder=\"변경할 비밀번호를 확인해주세요\" value={changePasswordConfirm} onChange={e=>setChangePasswordConfirm(e.target.value)}/>\r\n                {changePasswordConfirm.trim() !== \"\" ? (\r\n                    <ConfirmText className=\"px-2\" check={changePassword === changePasswordConfirm}>\r\n                        {changePassword === changePasswordConfirm ? \"비밀번호가 일치합니다.\" : \"비밀번호가 일치하지 않습니다.\" }\r\n                    </ConfirmText>\r\n                ) : null}\r\n\r\n            </InputWrap>\r\n            <BtnWrap className=\"flex w-full\">\r\n                <AuthButton onClick={handleModify}>수정완료</AuthButton>\r\n                <AuthButton to=\"/\" >취소</AuthButton>\r\n            </BtnWrap>\r\n            \r\n        </Container>\r\n        </>\r\n        ) : (\r\n            <Loading/>\r\n        )}\r\n    </>);\r\n}\r\n\r\nexport default ProfileModify;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\nwidth:50vw;\r\nheight:45vh;\r\n@media screen and (max-width: 768px) {\r\n/* 모바일에 사용될 스트일 시트를 여기에 작성합니다. */\r\nwidth:80vw;\r\nheight:50vh;\r\n}\r\n`;\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Container className=\"px-2 py-20 border-4 border-indigo-300 mx-auto mt-20 font-bold text-gray-700 rounded-lg shadow-lg text-center\">\r\n            <div>없거나 삭제된 페이지 입니다.</div>\r\n            <Link className=\"underline\" to=\"/\">메인페이지로</Link>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputWithLabel from '../AuthComponents/InputWithLabel';\r\n\r\nconst Test = ({state}) => {\r\n    return (\r\n        <>\r\n            <InputWithLabel label={\"닉네임\"} condition={\"( 공백없이 4 ~ 16자 사이로 입력해주세요 )\"} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {state}\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n        \r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps,null)(Test);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AuthRoute = ({isAuth, ...rest}) => {\r\n    return (\r\n        <>\r\n            {isAuth ? (\r\n                <Route\r\n                    {...rest}\r\n                />\r\n            ) : (\r\n                <Redirect to=\"/auth/login\" />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthRoute;","import React, { useEffect } from 'react';\nimport { api } from '../api';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport {Login, Register, Home, View, Write, Modify, ProfileModify, NotFound, test, AuthRoute} from '../Routes'\n\nconst App = (props) => {\n  useEffect(()=>{\n    const ServerCheck = async() => {\n      try {\n        await api.get('/api/check');\n      } catch(e) {\n        const {status} = e.response;\n        console.log(status);\n        if(status === 500) {\n          window.alert(\"서버가 닫혀있습니다.\")\n        }\n        throw e;\n      }\n    }\n    ServerCheck();\n  },[])\n  return (\n    <>\n      <Router>\n        <Switch>\n          <AuthRoute exact path=\"/\" isAuth={localStorage.getItem(\"username\") !== null} component={Home}/>\n          <Route exact path=\"/write\" component={Write} />\n          <Route exact path=\"/modify/:id\" component={Modify} />\n          <Route exact path=\"/view/:id\" component={View} />\n          <Route exact path=\"/auth/login\" component={Login} />\n          <Route exact path=\"/auth/register\" component={Register} />\n          <Route exact path=\"/profile/modify\" component={ProfileModify} />\n          <Route exact path=\"/notfound\" component={NotFound} />\n          <Route exact path=\"/test\" component={test} />\n          <Redirect path=\"*\" to=\"/notfound\" />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './css/index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider> ,\n  document.getElementById('root')\n);"],"sourceRoot":""}